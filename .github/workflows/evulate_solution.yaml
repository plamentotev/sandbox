name: Evaluate Solution
on:
  issue_comment:
    types: [created]
jobs:
  Evaluate:
    runs-on: ubuntu-latest
    if: github.event.issue.number == 17 && github.event.issue.state == 'open'
    timeout-minutes: 5
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Mark comment as being evaluated
        uses: actions/github-script@v2
        with:
          script: |
            const comment_id = context.payload.comment.id;

            github.reactions.createForIssueComment({
              comment_id: comment_id,
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: `eyes`
            });

      - name: Evaluate the solution
        id: evaluate
        uses: ./.github/actions/emoji-gramming-evaluate-action
        with:
          input: 'abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ Hello world'
          expected-output: 'nopqrstuvwxyzabcdefghijklm NOPQRSTUVWXYZABCDEFGHIJKLM Uryyb jbeyq'
          leaderboard: data/leaderboard-1.json
          user: ${{ github.event.comment.user.login }}
          code: ${{ github.event.comment.body }}
          solution-url: ${{ github.event.comment.html_url }}

      - name: Commit changes
        run: |
          git add data/
          if ! git diff --staged --quiet; then
            git config user.name github-actions
            git config user.email github-actions@github.com

            git commit -m "Update leaderboard"
            git push
          fi

      - name: Give feedback
        uses: actions/github-script@v2
        env:
          EVALUATION_SUCCESS: ${{ steps.evaluate.outputs.success }}
          EVALUATION_FEEDBACK: ${{ steps.evaluate.outputs.feedback }}
        with:
          script: |
            const issue_number = context.payload.issue.number;
            const comment_id = context.payload.comment.id;
            const comment_user = context.payload.comment.user.login;

            const reaction = (process.env.EVALUATION_SUCCESS == 'true') ? 'hooray' : 'confused';
            const feedback = process.env.EVALUATION_FEEDBACK;

            github.reactions.createForIssueComment({
              comment_id: comment_id,
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: reaction
            });
            github.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: feedback
            });
